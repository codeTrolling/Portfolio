// const [confidentLanguages, setConfidentLanguages] = useState(["0", "0", "0", "0", "0", "0"]);
    // const [confidentFrameworks, setConfidentFrameworks] = useState(["0", "0", "0", "0", "0", "0"]);
    // const [familiarLanguages, setFamiliarLanguages] = useState(["0", "0"]);
    // const [confidentDatabases, setConfidentDatabases] = useState(["0", "0"]);
    // const [lastInterval, setLastInterval] = useState();

    // useEffect(() => {
    //     const showSkills = () => {
    //         if(lastInterval === undefined){
    //             setLastInterval(setInterval(() => {
    //                 if(confidentLanguages.includes("0")){
    //                     let temp = confidentLanguages.slice();
    //                     //console.log(confidentLanguages.length)
    //                     temp[counter] = "1";
    //                     setConfidentLanguages(temp);
    //                     setCounter(counter+1);
    //                     if(counter > confidentLanguages.length){
    //                         setCounter(0);
    //                     }
    //                 }
    //                 else if(confidentFrameworks.includes("0")){
    //                     let temp = confidentFrameworks.slice();
    //                     temp[counter] = "1";
    //                     setConfidentFrameworks(temp);
    //                     setCounter(counter+1);
    //                     if(counter > confidentFrameworks.length){
    //                         setCounter(0);
    //                     }
    //                 }
    //                 else if(familiarLanguages.includes("0")){
    //                     let temp = familiarLanguages.slice();
    //                     temp[counter] = "1";
    //                     setFamiliarLanguages(temp);
    //                     setCounter(counter+1);
    //                     if(counter > familiarLanguages.length){
    //                         setCounter(0);
    //                     }
    //                 }
    //                 else if(confidentDatabases.includes("0")){
    //                     let temp = confidentDatabases.slice();
    //                     temp[counter] = "1";
    //                     setConfidentDatabases(temp);
    //                     setCounter(counter+1);
    //                     if(counter > confidentDatabases.length){
    //                         setCounter(0);
    //                     }
    //                 }
    //                 else{
    //                     clearInterval(lastInterval);
    //                     setLastInterval(undefined);
    //                 }
    //             }, 200))
    //         }
                
    //         }

    //     const hideSkills = () =>{
    //         if(lastInterval !== undefined){
    //             clearInterval(lastInterval);
    //             setLastInterval(undefined);
    //         }
    //         setConfidentLanguages(["0", "0", "0", "0", "0", "0"]);
    //         setConfidentFrameworks(["0", "0", "0", "0", "0", "0"]);
    //         setFamiliarLanguages(["0", "0"]);
    //         setConfidentDatabases(["0", "0"]);
    //     }
    //     console.log("are we spamming?")

    //     isOnScreen ? showSkills() : hideSkills()
    // }, [isOnScreen, counter])







CURRENT VERSION THAT WORKS
<div className="viewport flex-column" ref={viewportRef} style={{opacity: isOnScreen ? "1" : "0", transition: isOnScreen ? "all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)" : "all 1s linear", transform: isOnScreen ? "translateX(0)" : "translate(100px)"}}>
            <h2 className="theme-font-family heading">Skills</h2>
            <label className="theme-font-family">As of writing this, I am confident with these languages:</label>
            <div className="flex skills-container">
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 1.1s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>JavaScript</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 1.4s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>HTML</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 1.7s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>CSS</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 2s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>C#</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 2.3s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>Python</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 2.6s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>C++</label>
            </div>

            <label className="theme-font-family">As well as these frameworks:</label>
            <div className="flex skills-container">
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 2.9s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>React.js</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 3.2s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>Express.js</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 3.5s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>Mongoose.js</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 3.8s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>.NET Web API</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 4.1s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>Entity Framework</label>
            </div>

            <label className="theme-font-family">I am also familiar with these languages (I have used them):</label>
            <div className="flex skills-container">
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 4.4s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>Java</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 4.7s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>C</label>
            </div>

            <label className="theme-font-family">I am also confident with these databases:</label>
            <div className="flex skills-container">
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 5s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>MongoDB</label>
                <label className="theme-font-family skill" style={{opacity: isOnScreen ? "1" : "0", transition: "all 5.3s ease-in", transform: isOnScreen ? "translate(0px)" : "translate(20px)"}}>MS SQL Server</label>
            </div>
        </div>